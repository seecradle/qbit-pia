import os
import time
import subprocess
from dotenv import load_dotenv

# Load qBittorrent credentials from environment file
load_dotenv('.env')  # Path to your .env file

PollTime = 30

def restart_pia_service():
    try:
        # Attempt to restart the VPN service via command line
        print("Attempting to restart PIA service...")
        subprocess.run(["piactl", "disconnect"], check=True)  # Assuming piactl command is available
        time.sleep(5)
        subprocess.run(["piactl", "connect"], check=True)
        print("PIA service restarted successfully.")
    except subprocess.CalledProcessError:
        print("Failed to restart PIA service.")

def get_vpn_port():
    try:
        output = subprocess.check_output(["piactl", "get", "portforward"]).decode().strip()
        return output if output != "Inactive" else None
    except subprocess.CalledProcessError:
        return None

def check_vpn_connection():
    try:
        output = subprocess.check_output(["piactl", "get", "connectionstate"]).decode().strip()
        if output != "Connected":
            print("VPN is not connected. Attempting to reconnect...")
            restart_pia_service()
    except subprocess.CalledProcessError:
        print("Failed to check VPN connection state.")

def update_qbittorrent_port(port):
    try:
        # Replace with appropriate command to update qBittorrent settings
        # Adjust according to qBittorrent command-line options on Windows
        print(f"qBittorrent port updated to {port}")
    except Exception as e:
        print(f"Failed to update qBittorrent port: {e}")

def update_ufw_rule(port):
    # Not relevant for Windows, adjust logic or omit as needed
    pass

def main():
    while True:
        check_vpn_connection()
        vpn_port = get_vpn_port()
        
        if vpn_port:
            update_qbittorrent_port(vpn_port)
            # update_ufw_rule(vpn_port)  # Adjust or omit as needed
        else:
            # Update to a blocked port as a kill switch mechanism
            blocked_port = '70'  # Example of a blocked port
            update_qbittorrent_port(blocked_port)
            print("VPN is inactive, qBittorrent updated to use a blocked port")
            restart_pia_service()

        time.sleep(PollTime)

if __name__ == "__main__":
    main()
